.rt-SelectTrigger {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  flex-shrink: 0;
  user-select: none;
  vertical-align: top;
  line-height: var(--height);
}

.rt-SelectIcon {
  flex-shrink: 0;

  .rt-SelectTrigger:where(:not(.variant-ghost)) & {
    opacity: 0.9;
  }
}

.rt-SelectContent {
  overflow: hidden;

  background-color: var(--select-content-bg);
  --select-content-radius: min(
    (var(--select-item-height) / 2 + var(--select-content-padding)),
    max(var(--radius-3), var(--radius-full))
  );
  border-radius: var(--select-content-radius);

  &[data-side] {
    min-width: var(--radix-select-trigger-width);
    max-height: var(--radix-select-content-available-height);
    transform-origin: var(--radix-select-content-transform-origin);
  }

  & .rt-ScrollAreaScrollbar {
    --select-content-scrollbar-margin: max(
      calc(var(--select-content-radius) / 1.5),
      var(--select-content-padding)
    );
    margin-top: var(--select-content-scrollbar-margin);
    margin-bottom: var(--select-content-scrollbar-margin);
  }
}

.rt-SelectViewport {
  box-sizing: border-box;
  padding: var(--select-content-padding);

  .rt-SelectContent:has(.rt-ScrollAreaScrollbar[data-orientation='vertical']) & {
    padding-right: 12px;
  }
}

.rt-SelectItem {
  display: flex;
  align-items: center;
  height: var(--select-item-height);
  border-radius: max(var(--radius-2), var(--radius-full));
  padding-left: var(--space-5);
  padding-right: var(--space-5);
  position: relative;
  box-sizing: border-box;
  outline: none;
  cursor: default;

  scroll-margin: var(--select-content-padding) 0;

  /* Fix sticky text highlighting after selection in Firefox */
  user-select: none;
}

.rt-SelectItemIndicator {
  position: absolute;
  left: 0;
  width: var(--space-5);
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.rt-SelectSeparator {
  height: 1px;
  margin: var(--space-2);
}

.rt-SelectLabel {
  display: flex;
  align-items: center;
  height: var(--select-item-height);
  padding-left: var(--space-5);
  padding-right: var(--space-5);
  font-size: var(--font-size-1);
  letter-spacing: var(--letter-spacing-1);
  user-select: none;
  cursor: default;

  &:not(:first-child) {
    margin-top: var(--space-2);
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * TRIGGER SIZES                                                                                   *
 *                                                                                                 *
 ***************************************************************************************************/

.rt-SelectTrigger {
  color: var(--gray-12);

  &:where(:not(.variant-ghost)) {
    height: var(--select-trigger-height);
  }
  &:where(.variant-ghost) {
    box-sizing: content-box;
    height: fit-content;
    padding: var(--select-trigger-ghost-padding-y) var(--select-trigger-ghost-padding-x);

    /* We reset the defined margin variables to avoid inheriting them from a higher component */
    /* If a margin IS defined on the component itself, the utility class will win and reset it */
    --margin-top: 0px;
    --margin-right: 0px;
    --margin-bottom: 0px;
    --margin-left: 0px;

    /* Define the overrides to incorporate the negative margins */
    --margin-top-override: calc(var(--margin-top, 0px) - var(--select-trigger-ghost-padding-y));
    --margin-right-override: calc(var(--margin-right, 0px) - var(--select-trigger-ghost-padding-x));
    --margin-bottom-override: calc(
      var(--margin-bottom, 0px) - var(--select-trigger-ghost-padding-y)
    );
    --margin-left-override: calc(var(--margin-left, 0px) - var(--select-trigger-ghost-padding-x));

    /* Reset the overrides on direct children */
    :where(&) > * {
      --margin-top-override: initial;
      --margin-right-override: initial;
      --margin-bottom-override: initial;
      --margin-left-override: initial;
    }

    margin: var(--margin-top-override) var(--margin-right-override) var(--margin-bottom-override)
      var(--margin-left-override);
  }
}

@breakpoints {
  .rt-SelectTrigger {
    &.size-1 {
      --select-trigger-height: var(--space-5);
      gap: 0;
      font-size: var(--font-size-1);
      line-height: var(--line-height-1);
      letter-spacing: var(--letter-spacing-1);
      border-radius: max(var(--radius-1), var(--radius-full));

      &:where(:not(.variant-ghost)) {
        padding-left: var(--space-2);
        padding-right: var(--space-2);
      }
      &:where(.variant-ghost) {
        --select-trigger-ghost-padding-x: var(--space-2);
        --select-trigger-ghost-padding-y: var(--space-1);
      }
    }
    &.size-2 {
      --select-trigger-height: var(--space-6);
      gap: var(--space-1);
      font-size: var(--font-size-2);
      line-height: var(--line-height-2);
      letter-spacing: var(--letter-spacing-2);
      border-radius: max(var(--radius-2), var(--radius-full));

      &:where(:not(.variant-ghost)) {
        padding-left: var(--space-3);
        padding-right: var(--space-3);
      }
      &:where(.variant-ghost) {
        --select-trigger-ghost-padding-x: var(--space-2);
        --select-trigger-ghost-padding-y: var(--space-1);
      }
    }
    &.size-3 {
      --select-trigger-height: var(--space-7);
      gap: var(--space-2);
      font-size: var(--font-size-3);
      line-height: var(--line-height-3);
      letter-spacing: var(--letter-spacing-3);
      border-radius: max(var(--radius-3), var(--radius-full));

      &:where(:not(.variant-ghost)) {
        padding-left: var(--space-4);
        padding-right: var(--space-4);
      }
      &:where(.variant-ghost) {
        --select-trigger-ghost-padding-x: var(--space-3);
        --select-trigger-ghost-padding-y: calc(var(--space-1) * 1.5);
      }
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * CONTENT SIZES                                                                                   *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-SelectContent {
    &.size-1 {
      --select-content-padding: var(--space-1);
      --select-item-height: var(--space-5);

      & .rt-SelectItem {
        font-size: var(--font-size-1);
        letter-spacing: var(--letter-spacing-1);
      }
    }
    &.size-2 {
      --select-content-padding: var(--space-2);
      --select-item-height: var(--space-6);

      & .rt-SelectItem {
        font-size: var(--font-size-2);
        letter-spacing: var(--letter-spacing-2);
      }
    }
    &.size-3 {
      --select-content-padding: var(--space-2);
      --select-item-height: var(--space-7);

      & .rt-SelectLabel {
        font-size: var(--font-size-2);
        letter-spacing: var(--letter-spacing-2);
      }

      & .rt-SelectItem {
        font-size: var(--font-size-3);
        letter-spacing: var(--letter-spacing-3);
      }
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * TRIGGER VARIANTS                                                                                *
 *                                                                                                 *
 ***************************************************************************************************/

.rt-SelectTrigger {
  &[data-placeholder] {
    /* target value */
    & > span > span {
      color: var(--gray-a10);
    }
  }
}

/* surface */

.rt-SelectTrigger:where(.variant-surface) {
  color: var(--gray-12);
  background-color: var(--color-surface);
  box-shadow: inset 0 0 0 1px var(--gray-a7);

  &:where(:hover, [data-state='open']) {
    box-shadow: inset 0 0 0 1px var(--gray-a8);
  }
  &:where(:focus-visible) {
    box-shadow: inset 0 0 0 1px var(--accent-8), 0 0 0 1px var(--accent-a8);
  }
}

/* classic */

.radix-themes {
  /* prettier-ignore */
  --select-trigger__classic__box-shadow:
		inset 0 0 0 1px var(--gray-a6),
		inset 0 2px 0 0 var(--white-a10),
		inset 0 -2px 0 0 var(--gray-a5)
	;
}
:is(.dark, .dark-theme),
:is(.dark, .dark-theme) .radix-themes:not(.light, .light-theme) {
  /* prettier-ignore */
  --select-trigger__classic__box-shadow:
		0 0 0 1px var(--black-a9),
		inset 0 1px 0 0 var(--white-a6),
		inset 0 -1px 0 0 var(--black-a9)
	;
}

.rt-SelectTrigger:where(.variant-classic) {
  color: var(--gray-12);
  background-color: var(--color-surface);
  background-image: linear-gradient(var(--gray-a2), var(--gray-a1));
  box-shadow: var(--select-trigger__classic__box-shadow);

  position: relative;
  z-index: 0;
  &::before,
  &::after {
    content: '';
    position: absolute;
    inset: 2px;
    border-radius: 2px;
    pointer-events: none;
  }
  &::before {
    z-index: 1;
    background-image: linear-gradient(var(--accent-a1), transparent 50%);
    mix-blend-mode: darken;
  }
  &::after {
    z-index: 2;
    background-image: linear-gradient(transparent 50%, var(--white-a2));
    mix-blend-mode: soft-light;
  }

  &:where(:hover, [data-state='open']) {
    background-image: linear-gradient(var(--black-a3), var(--black-a2) 50%);
  }
  &:where(:focus-visible) {
    box-shadow: inset 0 0 0 1px var(--accent-8), 0 0 0 1px var(--accent-a8);
  }
}

/* soft / ghost */

.rt-SelectTrigger:where(.variant-soft),
.rt-SelectTrigger:where(.variant-ghost) {
  color: var(--accent-12);

  &[data-placeholder] {
    /* target value */
    & > span > span {
      color: var(--accent-12);
      opacity: 0.5;
    }
  }
  &:where(:focus-visible) {
    box-shadow: inset 0 0 0 1px var(--accent-8), 0 0 0 1px var(--accent-a8);
  }
}
.rt-SelectTrigger:where(.variant-soft) {
  background-color: var(--accent-a3);

  &:where(:hover, [data-state='open']) {
    background-color: var(--accent-a4);
  }
}
.rt-SelectTrigger:where(.variant-ghost) {
  &:where(:hover, [data-state='open']) {
    background-color: var(--accent-a3);
  }
}

/* all disabled triggers */

.rt-SelectTrigger:disabled {
  color: var(--gray-a8);
  cursor: not-allowed;
  box-shadow: none;
  background-color: transparent;
  background-image: none;

  &::before,
  &::after {
    display: none;
  }

  &:where(:not(.variant-ghost)) {
    background-color: var(--gray-a3);
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * MENU VARIANTS                                                                                   *
 *                                                                                                 *
 ***************************************************************************************************/

.rt-SelectContent {
  --select-content-bg: var(--color-panel-solid);
  box-shadow: var(--shadow-5);
}
.rt-SelectItem[data-disabled] {
  color: var(--gray-a8);
}
.rt-SelectLabel {
  color: var(--gray-a11);
}
.rt-SelectSeparator {
  background-color: var(--gray-a6);
}

/* solid */

.rt-SelectContent.variant-solid {
  & .rt-SelectItem[data-highlighted] {
    background-color: var(--accent-9);
    color: var(--accent-9-contrast);
  }
  &:where(.high-contrast) .rt-SelectItem[data-highlighted] {
    background-color: var(--accent-12);
    color: var(--accent-1);
  }
}

/* soft */

.rt-SelectContent.variant-soft {
  & .rt-SelectItem[data-highlighted] {
    background-color: var(--accent-a5);
  }
}
