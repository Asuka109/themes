.rt-SwitchRoot {
  display: inline-flex;
  align-items: center;
  vertical-align: bottom;
  flex-shrink: 0;

  /* Match Text size 2 line-height */
  height: var(--line-height-2);

  --switch-padding: 1px;
  --switch-width: calc(var(--switch-height) * 1.75);
  --switch-thumb-size: calc(var(--switch-height) - var(--switch-padding) * 2);
  --switch-thumb-translate: calc(var(--switch-width) - var(--switch-height));
}

.rt-SwitchButton {
  position: relative;
  display: inline-flex;
  align-items: center;
  width: var(--switch-width);
  height: var(--switch-height);
  padding: var(--switch-padding);
  border-radius: var(--switch-radius);

  &::before {
    transition-property: background-color, box-shadow, filter;
    transition-duration: 120ms;
    transition-timing-function: ease-in-out;
  }

  &:where(:active)::before {
    transition-duration: 30ms;
  }
}

.rt-SwitchThumb {
  position: relative;
  width: var(--switch-thumb-size);
  height: var(--switch-thumb-size);
  border-radius: calc(var(--switch-radius) - var(--switch-padding));
  transition-property: background-color, transform, filter;
  transition-duration: 120ms;
  transition-timing-function: ease-in-out;

  &:where([data-state='checked']) {
    transform: translateX(var(--switch-thumb-translate));
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

@breakpoints {
  .rt-SwitchRoot {
    &.size-1 {
      --switch-height: var(--space-4);
      --switch-radius: max(var(--radius-2), var(--radius-full));
    }
    &.size-2 {
      --switch-height: var(--space-5);
      --switch-radius: max(var(--radius-3), var(--radius-full));
    }
    &.size-3 {
      --switch-height: var(--space-6);
      --switch-radius: max(var(--radius-4), var(--radius-full));
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * VARIANTS                                                                                        *
 *                                                                                                 *
 ***************************************************************************************************/

/* a pseudo element for the background color */
.rt-SwitchButton::before {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
}

/* a pseudo element for the focus outline */
.rt-SwitchButton:where(:focus-visible)::after {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  box-shadow: 0 0 0 2px var(--accent-3), 0 0 0 4px var(--accent-a8);
}

/* surface */

:root,
.light,
.light-theme {
  --switch-button-filter__surface-checked-active: brightness(0.92) saturate(1.1);
}
.dark,
.dark-theme {
  --switch-button-filter__surface-checked-active: brightness(1.08);
}

.rt-SwitchRoot.variant-surface {
  & .rt-SwitchButton {
    &::before {
      background-color: var(--gray-a3);
      box-shadow: inset 0 0 0 1px var(--gray-a7);
    }

    &:where(:active)::before {
      background-color: var(--gray-4);
    }
    &:where([data-state='checked'])::before {
      background-color: var(--accent-9);
    }
    &:where([data-state='checked']:active)::before {
      filter: var(--switch-button-filter__surface-checked-active);
    }
  }

  & .rt-SwitchThumb {
    background-color: white;

    &:where([data-state='unchecked']) {
      box-shadow: 0 0 0 1px var(--gray-8), 0 1px 1px var(--black-a3), 0 2px 4px -1px var(--black-a3);
    }
    &:where([data-state='checked']) {
      box-shadow: 0 0 0 1px var(--black-a5), 0 1px 1px var(--black-a3),
        0 2px 4px -1px var(--black-a3);
    }
  }
}

/* classic */

:root,
.light,
.light-theme {
  --switch-button-filter__surface-checked-active: brightness(0.92) saturate(1.1);
}
.dark,
.dark-theme {
  --switch-button-filter__surface-checked-active: brightness(1.08);
}

.rt-SwitchRoot.variant-classic {
  & .rt-SwitchButton {
    &:where([data-state='unchecked'])::before {
      background-color: var(--gray-a4);
      box-shadow: var(--shadow-1);
    }

    &:where([data-state='unchecked']:active)::before {
      background-color: var(--gray-a6);
    }
    &:where([data-state='checked'])::before {
      background-color: var(--accent-9);
      /* checked shadow shouldn't change between light and dark mode because of the coloured fill */
      box-shadow: inset 0 0 0 1px var(--gray-a6), inset 0 1.5px 2px 0 var(--black-a7);
    }
    &:where([data-state='checked']:active)::before {
      filter: var(--switch-button-filter__surface-checked-active);
    }
  }

  & .rt-SwitchThumb {
    background-color: white;
    box-shadow: 0 0 0 1px var(--black-a4), 0 1px 3px var(--black-a7), 0 2px 4px -1px var(--black-a3);
  }
}

/* soft */

:root,
.light,
.light-theme {
  --switch-button-filter__soft-checked-active: contrast(1.2) brightness(0.86) saturate(1.1);
}
.dark,
.dark-theme {
  --switch-button-filter__soft-checked-active: brightness(1.08);
}

.rt-SwitchRoot.variant-soft {
  & .rt-SwitchButton {
    &::before {
      /* blend gray with accent */
      background-image: linear-gradient(to right, var(--accent-a3), var(--accent-a3));
    }
    &:where([data-state='unchecked'])::before {
      background-color: var(--gray-a5);
    }
    &:where([data-state='unchecked']:active)::before {
      background-color: var(--gray-a7);
    }
    &:where([data-state='checked'])::before {
      background-color: var(--accent-a8);
    }
    &:where([data-state='checked']:active)::before {
      filter: var(--switch-button-filter__soft-checked-active);
    }
  }

  & .rt-SwitchThumb {
    background-color: white;
    box-shadow: 0 0 0 1px var(--accent-a3), 0 1px 3px var(--accent-a4),
      0 2px 4px -1px var(--accent-a3);
    filter: saturate(0.45);
  }
}

/* all high-contrast */

.rt-SwitchRoot.high-contrast {
  & .rt-SwitchButton {
    &:where([data-state='checked'])::before {
      /* blend black and accent */
      background-image: linear-gradient(to right, var(--black-a11), var(--black-a11));
      background-color: var(--accent-9);
      filter: saturate(0.9) brightness(0.95);
    }
  }
  & .rt-SwitchButton:where([data-state='checked']:active)::before {
    filter: contrast(0.82) saturate(1.25) brightness(1.16);
  }

  /* soft high-contrast */

  &:where(.variant-soft) .rt-SwitchButton:where([data-state='checked'])::before {
    background-image: linear-gradient(to right, var(--black-a9), var(--black-a9));
  }
}

/* all disabled switches */

:root,
.light,
.light-theme {
  --switch-thumb-shadow__disabled: 0 0 0 1px var(--gray-6);
  --switch-blend-mode__disabled: multiply;
}
.dark,
.dark-theme {
  --switch-thumb-shadow__disabled: 0 0 0 1px var(--gray-5);
  --switch-blend-mode__disabled: screen;
}

.rt-SwitchRoot {
  & .rt-SwitchButton[data-disabled] {
    cursor: not-allowed;
    mix-blend-mode: var(--switch-blend-mode__disabled);

    &::before {
      background-color: var(--gray-a3);
      background-image: none;
      box-shadow: inset 0 0 0 1px var(--gray-a5);
    }
  }
  & .rt-SwitchThumb[data-disabled] {
    background-color: var(--gray-2);
    box-shadow: var(--switch-thumb-shadow__disabled);
  }
}
