.rt-Card {
  position: relative;

  &:where(button, a) {
    display: block;
  }

  &::after {
    inset: 0;
    position: absolute;
    pointer-events: none;
    border-radius: inherit;
    content: '';
  }
}

.rt-CardInner {
  position: relative;
  box-sizing: border-box;
  border-radius: inherit;
  overflow: hidden;
  height: 100%;

  padding: var(--card-padding);
}

/***************************************************************************************************
 *                                                                                                 *
 * SIZES                                                                                           *
 *                                                                                                 *
 ***************************************************************************************************/

.rt-Card {
  &:where(.variant-ghost) {
    /* We reset the defined margin variables to avoid inheriting them from a higher component */
    /* If a margin IS defined on the component itself, the utility class will win and reset it */
    --margin-top: 0px;
    --margin-right: 0px;
    --margin-bottom: 0px;
    --margin-left: 0px;

    /* Define the overrides to incorporate the negative margins */
    --margin-top-override: calc(var(--margin-top, 0px) - var(--card-padding));
    --margin-right-override: calc(var(--margin-right, 0px) - var(--card-padding));
    --margin-bottom-override: calc(var(--margin-bottom, 0px) - var(--card-padding));
    --margin-left-override: calc(var(--margin-left, 0px) - var(--card-padding));

    margin: var(--margin-top-override) var(--margin-right-override) var(--margin-bottom-override)
      var(--margin-left-override);
  }
}

@breakpoints {
  .rt-Card {
    &.size-1 {
      --card-padding: var(--space-3);
      border-radius: var(--radius-4);
    }
    &.size-2 {
      --card-padding: var(--space-4);
      border-radius: var(--radius-4);
    }
    &.size-3 {
      --card-padding: var(--space-5);
      border-radius: var(--radius-5);
    }
    &.size-4 {
      --card-padding: var(--space-6);
      border-radius: var(--radius-5);
    }
    &.size-5 {
      --card-padding: var(--space-8);
      border-radius: var(--radius-6);
    }
  }
}

/***************************************************************************************************
 *                                                                                                 *
 * VARIANTS                                                                                        *
 *                                                                                                 *
 ***************************************************************************************************/

/* outline/surface */

.rt-Card.variant-outline,
.rt-Card.variant-surface {
  &::after {
    box-shadow: inset 0 0 0 1px var(--gray-a6);
  }
  &:where(button, [href]) {
    &:hover::after {
      box-shadow: inset 0 0 0 1px var(--gray-a8);
    }
    &:focus-visible::after {
      box-shadow: 0 0 0 2px var(--accent-a8);
    }
  }
}
.rt-Card.variant-surface {
  background-color: var(--color-surface);
}

/* ghost */

.rt-Card.variant-ghost {
  &:where(button, [href]) {
    &:hover {
      background-color: var(--gray-a3);
    }
    &:focus-visible::after {
      box-shadow: 0 0 0 2px var(--accent-8);
    }
  }
}
